version: '3.8'

services:
#  app:
#    build: .
#    ports:
#      - "${SERVER_PORT}:${SERVER_PORT}"
#    depends_on:
#      - db
#      - kafka
#    environment:
#      SERVER_PORT: ${SERVER_PORT}
#      DB_URL: ${DB_URL}
#      DB_USERNAME: ${DB_USERNAME}
#      DB_PASSWORD: ${DB_PASSWORD}
#      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
#      MAIL_HOST: ${MAIL_HOST}
#      MAIL_PORT: ${MAIL_PORT}
#      MAIL_USERNAME: ${MAIL_USERNAME}
#      MAIL_PASSWORD: ${MAIL_PASSWORD}
#      TOKEN_SIGNING_KEY: ${TOKEN_SIGNING_KEY}
#      TOKEN_LIFETIME: ${TOKEN_LIFETIME}

  db:
    image: postgres:15
    container_name: database
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_EXTERNAL_PORT}:${DB_INTERNAL_PORT}"
  #    volumes:
  #      - ./pgdata:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_EXTERNAL_PORT}:${KAFKA_INTERNAL_PORT}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"

  sftp-service:
    container_name: sftp-service-balaguide
    build:
      context: /home/khatep/IdeaProjects/sftp-service   # путь до проекта sftp
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    env_file:
      - ../sftp-service/.env
    restart: always
    networks:
      - balaguide-network

networks:
  balaguide-network:
    driver: bridge

volumes:
  pgdata:
